[General]
scheduler-class = "MosaikScheduler"
total-stack = 2MiB
ned-path = .

*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""
*.configurator.optimizeRoutes = false

*.client*.numApps = 1
# for TCP connection set to: SocketAgentAppTcp
# for UDP connection set to: SocketAgentApp
*.client*.app[*].typename = "SocketAgentAppTcp"
*.client0.app[0].localPort = 7000
*.client1.app[0].localPort = 8000
*.client2.app[0].localPort = 9000


# Ethernet NIC configuration
**.eth[*].mac.queue.typename = "EtherQosQueue" # in routers
**.eth[*].mac.queue.dataQueue.typename = "DropTailQueue" # in routers

**.eth[*].mac.duplexMode = true

[Config EventBasedWinzentTCP]
network = networks.WinzentNetwork
*.client*.app[*].typename = "SocketAgentAppTcp"
description = "Event-based scheduling in TCP-based Winzent network"

[Config EventBasedWinzentTCP_disconnected_client2]
network = networks.DisconnectedClient2_WinzentNetwork
*.client*.app[*].typename = "SocketAgentAppTcp"
description = "Event-based scheduling in TCP-based Winzent network"

[Config EventBasedWinzentTCP_disconnected_client1]
network = networks.DisconnectedClient1_WinzentNetwork
*.client*.app[*].typename = "SocketAgentAppTcp"
description = "Event-based scheduling in TCP-based Winzent network"

[Config EventBasedWinzentUDP]
*.client*.app[*].typename = "SocketAgentApp"
network = networks.WinzentNetwork
description = "Event-based scheduling in UDP-based Winzent network"

[Config EventBasedWinzentUDP_disconnected_client2]
network = networks.DisconnectedClient2_WinzentNetwork
*.client*.app[*].typename = "SocketAgentApp"
description = "Event-based scheduling in UDP-based Winzent network"

[Config EventBasedWinzentUDP_disconnected_client1]
network = networks.DisconnectedClient1_WinzentNetwork
*.client*.app[*].typename = "SocketAgentApp"
description = "Event-based scheduling in UDP-based Winzent network"

[Config EventBasedUDP_SimulaneousMessageReceiving]
*.client*.app[*].typename = "SocketAgentApp"
network = networks.SimpleWinzentNetwork
description = "Simulatenous Message Receiving in SimpleWinzentNetwork"

#[Config RealTimeWinzent]
#network = networks.WinzentNetwork
#description = "Real-Time scheduling in Winzent network"
#experiment-label = real-time

[Config EventBasedWifi]
network = networks.WifiNetwork
description = "Event-based scheduling in Wifi network"
*.client*.wlan[0].typename = "AckingWirelessInterface"
*.client*.wlan[0].mac.useAck = false
*.client*.wlan[0].mac.fullDuplex = false
*.client*.wlan[0].radio.transmitter.communicationRange = 700m
*.client*.wlan[0].radio.receiver.ignoreInterference = true
*.client*.wlan[0].mac.headerLength = 23B

*.client*.**.bitrate = 200000 bps # 0,2 Mbps



[Config EventBasedCloud]
network = networks.MosaikNetwork
description = "Event-based scheduling in cloud network"
**.internetCloud.ipv4Delayer.config = xmldoc("networks/internetCloud.xml")

[Config EventBasedLTE]
network = networks.LTENetwork

#============= Mobility parameters ================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

#============= AMC module parameters ================
**.rbAllocationType = "localized"
**.cellInfo.numRbDl = 6
**.cellInfo.numRbUl = 6
**.numBands = 6

*.client*.mobility.constraintAreaMaxX = 600m
*.client*.mobility.constraintAreaMaxY = 600m
*.client*.mobility.constraintAreaMinX = 0m
*.client*.mobility.constraintAreaMinY = 0m
*.client*.mobility.initFromDisplayString = false
*.client*.mobility.initialX = uniform(0m,600m)
*.client*.mobility.initialY = uniform(0m,600m)
*.client*.mobility.speed = 1mps
*.client*.mobilityType = "LinearMobility"

# connect each UE to the eNB
**.client*.macCellId = 1
**.client*.masterId = 1

[Config EventBasedMultiCellMeshMini]
network = networks.MultiCell_mini

################ Mobility parameters #####################
# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

############### Number of Resource Blocks ################
**.numRbDl = 6
**.numRbUl = 6
**.binder.numBands = 6 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 30
**.eNodeBTxPower = 100
*.client*.macCellId = 1
*.client*.masterId = 1


**.mobilityVisualizer.displayOrientations = true
**.mobilityVisualizer.displayVelocities = true

**.mediumVisualizer.displaySignals = true

**.networkRouteVisualizer.displayRoutes = true
*.radioMedium.backgroundNoise.power = 5dBm


[Config EventBasedMultiCellMesh]
network = networks.MultiCell_Mesh_LTE

**.ueTxPower = 26
**.eNodeBTxPower = 100

*.client0.mobility.initialZ = 0m
*.client1.mobility.initialZ = 1.5m

**.eNodeBa1.mobility.initialZ = 17m
**.eNodeBa2.mobility.initialZ = 26m
**.eNodeBa3.mobility.initialZ = 27m

**.eNodeBb4.mobility.initialZ = 35m
**.eNodeBb5.mobility.initialZ = 11m
**.eNodeBb6.mobility.initialZ = 38m

**.eNodeBc7.mobility.initialZ = 33m
**.eNodeBc8.mobility.initialZ = 39m

*.physicalEnvironment.config = xmldoc("networks/basement.xml")
# *.radioMedium.obstacleLossType = "IdealObstacleLoss"

*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.nodeFilter = "not (*switch* or *Switch* or *AP*)"

*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true

*.configurator.assignDisjunctSubnetAddresses = false
*.configurator.addDefaultRoutes = false
*.configurator.addSubnetRoutes = false
*.configurator.optimizeRoutes = false

**.numRbDl = 6
**.numRbUl = 6
**.binder.numBands = 6 # this value should be kept equal to the number of RBs

# connect each UE to the eNB
**.client0.macCellId = 1
**.client0.masterId = 1
**.client1.macCellId = 2
**.client1.masterId = 2

*.radioMedium.backgroundNoise.power = 5dBm
