//
// Generated file, do not edit! Created by nedtool 5.6 from MosaikMessage.msg.
//

#ifndef __MOSAIKMESSAGE_M_H
#define __MOSAIKMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class MosaikMessage;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

// cplusplus {{
    const inet::B CHUNK_LENGTH; 
// }}

/**
 * Class generated from <tt>MosaikMessage.msg:23</tt> by nedtool.
 * <pre>
 * class MosaikMessage extends inet::FieldsChunk
 * {
 *     chunkLength = CHUNK_LENGTH;
 *     simtime_t creationTime;
 *     string content;
 *     string receiver;
 *     string sender;
 * }
 * </pre>
 */
class MosaikMessage : public ::inet::FieldsChunk
{
  protected:
    omnetpp::simtime_t creationTime = SIMTIME_ZERO;
    omnetpp::opp_string content;
    omnetpp::opp_string receiver;
    omnetpp::opp_string sender;

  private:
    void copy(const MosaikMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MosaikMessage&);

  public:
    MosaikMessage();
    MosaikMessage(const MosaikMessage& other);
    virtual ~MosaikMessage();
    MosaikMessage& operator=(const MosaikMessage& other);
    virtual MosaikMessage *dup() const override {return new MosaikMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual omnetpp::simtime_t getCreationTime() const;
    virtual void setCreationTime(omnetpp::simtime_t creationTime);
    virtual const char * getContent() const;
    virtual void setContent(const char * content);
    virtual const char * getReceiver() const;
    virtual void setReceiver(const char * receiver);
    virtual const char * getSender() const;
    virtual void setSender(const char * sender);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MosaikMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MosaikMessage& obj) {obj.parsimUnpack(b);}

#endif // ifndef __MOSAIKMESSAGE_M_H

