// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosima_core/messages/message.proto

#ifndef PROTOBUF_INCLUDED_cosima_5fcore_2fmessages_2fmessage_2eproto
#define PROTOBUF_INCLUDED_cosima_5fcore_2fmessages_2fmessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto 

namespace protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto
class AttackMessage;
class AttackMessageDefaultTypeInternal;
extern AttackMessageDefaultTypeInternal _AttackMessage_default_instance_;
class CosimaMsgGroup;
class CosimaMsgGroupDefaultTypeInternal;
extern CosimaMsgGroupDefaultTypeInternal _CosimaMsgGroup_default_instance_;
class InfoMessage;
class InfoMessageDefaultTypeInternal;
extern InfoMessageDefaultTypeInternal _InfoMessage_default_instance_;
class InfrastructureMessage;
class InfrastructureMessageDefaultTypeInternal;
extern InfrastructureMessageDefaultTypeInternal _InfrastructureMessage_default_instance_;
class InitialMessage;
class InitialMessageDefaultTypeInternal;
extern InitialMessageDefaultTypeInternal _InitialMessage_default_instance_;
class SynchronisationMessage;
class SynchronisationMessageDefaultTypeInternal;
extern SynchronisationMessageDefaultTypeInternal _SynchronisationMessage_default_instance_;
class TrafficMessage;
class TrafficMessageDefaultTypeInternal;
extern TrafficMessageDefaultTypeInternal _TrafficMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::AttackMessage* Arena::CreateMaybeMessage<::AttackMessage>(Arena*);
template<> ::CosimaMsgGroup* Arena::CreateMaybeMessage<::CosimaMsgGroup>(Arena*);
template<> ::InfoMessage* Arena::CreateMaybeMessage<::InfoMessage>(Arena*);
template<> ::InfrastructureMessage* Arena::CreateMaybeMessage<::InfrastructureMessage>(Arena*);
template<> ::InitialMessage* Arena::CreateMaybeMessage<::InitialMessage>(Arena*);
template<> ::SynchronisationMessage* Arena::CreateMaybeMessage<::SynchronisationMessage>(Arena*);
template<> ::TrafficMessage* Arena::CreateMaybeMessage<::TrafficMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

enum SynchronisationMessage_MsgType {
  SynchronisationMessage_MsgType_MAX_ADVANCE = 0,
  SynchronisationMessage_MsgType_WAITING = 1,
  SynchronisationMessage_MsgType_TRANSMISSION_ERROR = 2,
  SynchronisationMessage_MsgType_SynchronisationMessage_MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SynchronisationMessage_MsgType_SynchronisationMessage_MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SynchronisationMessage_MsgType_IsValid(int value);
const SynchronisationMessage_MsgType SynchronisationMessage_MsgType_MsgType_MIN = SynchronisationMessage_MsgType_MAX_ADVANCE;
const SynchronisationMessage_MsgType SynchronisationMessage_MsgType_MsgType_MAX = SynchronisationMessage_MsgType_TRANSMISSION_ERROR;
const int SynchronisationMessage_MsgType_MsgType_ARRAYSIZE = SynchronisationMessage_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SynchronisationMessage_MsgType_descriptor();
inline const ::std::string& SynchronisationMessage_MsgType_Name(SynchronisationMessage_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SynchronisationMessage_MsgType_descriptor(), value);
}
inline bool SynchronisationMessage_MsgType_Parse(
    const ::std::string& name, SynchronisationMessage_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SynchronisationMessage_MsgType>(
    SynchronisationMessage_MsgType_descriptor(), name, value);
}
enum InfrastructureMessage_MsgType {
  InfrastructureMessage_MsgType_DISCONNECT = 0,
  InfrastructureMessage_MsgType_RECONNECT = 1,
  InfrastructureMessage_MsgType_InfrastructureMessage_MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InfrastructureMessage_MsgType_InfrastructureMessage_MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InfrastructureMessage_MsgType_IsValid(int value);
const InfrastructureMessage_MsgType InfrastructureMessage_MsgType_MsgType_MIN = InfrastructureMessage_MsgType_DISCONNECT;
const InfrastructureMessage_MsgType InfrastructureMessage_MsgType_MsgType_MAX = InfrastructureMessage_MsgType_RECONNECT;
const int InfrastructureMessage_MsgType_MsgType_ARRAYSIZE = InfrastructureMessage_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InfrastructureMessage_MsgType_descriptor();
inline const ::std::string& InfrastructureMessage_MsgType_Name(InfrastructureMessage_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InfrastructureMessage_MsgType_descriptor(), value);
}
inline bool InfrastructureMessage_MsgType_Parse(
    const ::std::string& name, InfrastructureMessage_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InfrastructureMessage_MsgType>(
    InfrastructureMessage_MsgType_descriptor(), name, value);
}
enum AttackMessage_MsgType {
  AttackMessage_MsgType_PACKET_DROP = 0,
  AttackMessage_MsgType_PACKET_FALSIFICATION = 1,
  AttackMessage_MsgType_PACKET_DELAY = 2,
  AttackMessage_MsgType_AttackMessage_MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AttackMessage_MsgType_AttackMessage_MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AttackMessage_MsgType_IsValid(int value);
const AttackMessage_MsgType AttackMessage_MsgType_MsgType_MIN = AttackMessage_MsgType_PACKET_DROP;
const AttackMessage_MsgType AttackMessage_MsgType_MsgType_MAX = AttackMessage_MsgType_PACKET_DELAY;
const int AttackMessage_MsgType_MsgType_ARRAYSIZE = AttackMessage_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttackMessage_MsgType_descriptor();
inline const ::std::string& AttackMessage_MsgType_Name(AttackMessage_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttackMessage_MsgType_descriptor(), value);
}
inline bool AttackMessage_MsgType_Parse(
    const ::std::string& name, AttackMessage_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttackMessage_MsgType>(
    AttackMessage_MsgType_descriptor(), name, value);
}
// ===================================================================

class InitialMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitialMessage) */ {
 public:
  InitialMessage();
  virtual ~InitialMessage();

  InitialMessage(const InitialMessage& from);

  inline InitialMessage& operator=(const InitialMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitialMessage(InitialMessage&& from) noexcept
    : InitialMessage() {
    *this = ::std::move(from);
  }

  inline InitialMessage& operator=(InitialMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitialMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitialMessage* internal_default_instance() {
    return reinterpret_cast<const InitialMessage*>(
               &_InitialMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InitialMessage* other);
  friend void swap(InitialMessage& a, InitialMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitialMessage* New() const final {
    return CreateMaybeMessage<InitialMessage>(NULL);
  }

  InitialMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InitialMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InitialMessage& from);
  void MergeFrom(const InitialMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitialMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string logging_level = 5;
  void clear_logging_level();
  static const int kLoggingLevelFieldNumber = 5;
  const ::std::string& logging_level() const;
  void set_logging_level(const ::std::string& value);
  #if LANG_CXX11
  void set_logging_level(::std::string&& value);
  #endif
  void set_logging_level(const char* value);
  void set_logging_level(const char* value, size_t size);
  ::std::string* mutable_logging_level();
  ::std::string* release_logging_level();
  void set_allocated_logging_level(::std::string* logging_level);

  // int32 max_advance = 2;
  void clear_max_advance();
  static const int kMaxAdvanceFieldNumber = 2;
  ::google::protobuf::int32 max_advance() const;
  void set_max_advance(::google::protobuf::int32 value);

  // int32 until = 3;
  void clear_until();
  static const int kUntilFieldNumber = 3;
  ::google::protobuf::int32 until() const;
  void set_until(::google::protobuf::int32 value);

  // int32 step_size = 4;
  void clear_step_size();
  static const int kStepSizeFieldNumber = 4;
  ::google::protobuf::int32 step_size() const;
  void set_step_size(::google::protobuf::int32 value);

  // int32 max_byte_size_per_msg_group = 6;
  void clear_max_byte_size_per_msg_group();
  static const int kMaxByteSizePerMsgGroupFieldNumber = 6;
  ::google::protobuf::int32 max_byte_size_per_msg_group() const;
  void set_max_byte_size_per_msg_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InitialMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr logging_level_;
  ::google::protobuf::int32 max_advance_;
  ::google::protobuf::int32 until_;
  ::google::protobuf::int32 step_size_;
  ::google::protobuf::int32 max_byte_size_per_msg_group_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfoMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InfoMessage) */ {
 public:
  InfoMessage();
  virtual ~InfoMessage();

  InfoMessage(const InfoMessage& from);

  inline InfoMessage& operator=(const InfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InfoMessage(InfoMessage&& from) noexcept
    : InfoMessage() {
    *this = ::std::move(from);
  }

  inline InfoMessage& operator=(InfoMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InfoMessage* internal_default_instance() {
    return reinterpret_cast<const InfoMessage*>(
               &_InfoMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InfoMessage* other);
  friend void swap(InfoMessage& a, InfoMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InfoMessage* New() const final {
    return CreateMaybeMessage<InfoMessage>(NULL);
  }

  InfoMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InfoMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InfoMessage& from);
  void MergeFrom(const InfoMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InfoMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string sender = 4;
  void clear_sender();
  static const int kSenderFieldNumber = 4;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // string receiver = 5;
  void clear_receiver();
  static const int kReceiverFieldNumber = 5;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(::std::string&& value);
  #endif
  void set_receiver(const char* value);
  void set_receiver(const char* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // string content = 7;
  void clear_content();
  static const int kContentFieldNumber = 7;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int32 max_advance = 2;
  void clear_max_advance();
  static const int kMaxAdvanceFieldNumber = 2;
  ::google::protobuf::int32 max_advance() const;
  void set_max_advance(::google::protobuf::int32 value);

  // int32 sim_time = 3;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 3;
  ::google::protobuf::int32 sim_time() const;
  void set_sim_time(::google::protobuf::int32 value);

  // int32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // int32 creation_time = 8;
  void clear_creation_time();
  static const int kCreationTimeFieldNumber = 8;
  ::google::protobuf::int32 creation_time() const;
  void set_creation_time(::google::protobuf::int32 value);

  // bool is_falsified = 9;
  void clear_is_falsified();
  static const int kIsFalsifiedFieldNumber = 9;
  bool is_falsified() const;
  void set_is_falsified(bool value);

  // @@protoc_insertion_point(class_scope:InfoMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 max_advance_;
  ::google::protobuf::int32 sim_time_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 creation_time_;
  bool is_falsified_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SynchronisationMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SynchronisationMessage) */ {
 public:
  SynchronisationMessage();
  virtual ~SynchronisationMessage();

  SynchronisationMessage(const SynchronisationMessage& from);

  inline SynchronisationMessage& operator=(const SynchronisationMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SynchronisationMessage(SynchronisationMessage&& from) noexcept
    : SynchronisationMessage() {
    *this = ::std::move(from);
  }

  inline SynchronisationMessage& operator=(SynchronisationMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SynchronisationMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SynchronisationMessage* internal_default_instance() {
    return reinterpret_cast<const SynchronisationMessage*>(
               &_SynchronisationMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SynchronisationMessage* other);
  friend void swap(SynchronisationMessage& a, SynchronisationMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SynchronisationMessage* New() const final {
    return CreateMaybeMessage<SynchronisationMessage>(NULL);
  }

  SynchronisationMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SynchronisationMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SynchronisationMessage& from);
  void MergeFrom(const SynchronisationMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SynchronisationMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SynchronisationMessage_MsgType MsgType;
  static const MsgType MAX_ADVANCE =
    SynchronisationMessage_MsgType_MAX_ADVANCE;
  static const MsgType WAITING =
    SynchronisationMessage_MsgType_WAITING;
  static const MsgType TRANSMISSION_ERROR =
    SynchronisationMessage_MsgType_TRANSMISSION_ERROR;
  static inline bool MsgType_IsValid(int value) {
    return SynchronisationMessage_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    SynchronisationMessage_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    SynchronisationMessage_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    SynchronisationMessage_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return SynchronisationMessage_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return SynchronisationMessage_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return SynchronisationMessage_MsgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string timeout_msg_id = 6;
  void clear_timeout_msg_id();
  static const int kTimeoutMsgIdFieldNumber = 6;
  const ::std::string& timeout_msg_id() const;
  void set_timeout_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_timeout_msg_id(::std::string&& value);
  #endif
  void set_timeout_msg_id(const char* value);
  void set_timeout_msg_id(const char* value, size_t size);
  ::std::string* mutable_timeout_msg_id();
  ::std::string* release_timeout_msg_id();
  void set_allocated_timeout_msg_id(::std::string* timeout_msg_id);

  // .SynchronisationMessage.MsgType msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::SynchronisationMessage_MsgType msg_type() const;
  void set_msg_type(::SynchronisationMessage_MsgType value);

  // int32 sim_time = 3;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 3;
  ::google::protobuf::int32 sim_time() const;
  void set_sim_time(::google::protobuf::int32 value);

  // int32 max_advance = 4;
  void clear_max_advance();
  static const int kMaxAdvanceFieldNumber = 4;
  ::google::protobuf::int32 max_advance() const;
  void set_max_advance(::google::protobuf::int32 value);

  // bool timeout = 5;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 5;
  bool timeout() const;
  void set_timeout(bool value);

  // @@protoc_insertion_point(class_scope:SynchronisationMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr timeout_msg_id_;
  int msg_type_;
  ::google::protobuf::int32 sim_time_;
  ::google::protobuf::int32 max_advance_;
  bool timeout_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfrastructureMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InfrastructureMessage) */ {
 public:
  InfrastructureMessage();
  virtual ~InfrastructureMessage();

  InfrastructureMessage(const InfrastructureMessage& from);

  inline InfrastructureMessage& operator=(const InfrastructureMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InfrastructureMessage(InfrastructureMessage&& from) noexcept
    : InfrastructureMessage() {
    *this = ::std::move(from);
  }

  inline InfrastructureMessage& operator=(InfrastructureMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InfrastructureMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InfrastructureMessage* internal_default_instance() {
    return reinterpret_cast<const InfrastructureMessage*>(
               &_InfrastructureMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InfrastructureMessage* other);
  friend void swap(InfrastructureMessage& a, InfrastructureMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InfrastructureMessage* New() const final {
    return CreateMaybeMessage<InfrastructureMessage>(NULL);
  }

  InfrastructureMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InfrastructureMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InfrastructureMessage& from);
  void MergeFrom(const InfrastructureMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InfrastructureMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InfrastructureMessage_MsgType MsgType;
  static const MsgType DISCONNECT =
    InfrastructureMessage_MsgType_DISCONNECT;
  static const MsgType RECONNECT =
    InfrastructureMessage_MsgType_RECONNECT;
  static inline bool MsgType_IsValid(int value) {
    return InfrastructureMessage_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    InfrastructureMessage_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    InfrastructureMessage_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    InfrastructureMessage_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return InfrastructureMessage_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return InfrastructureMessage_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return InfrastructureMessage_MsgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string change_module = 4;
  void clear_change_module();
  static const int kChangeModuleFieldNumber = 4;
  const ::std::string& change_module() const;
  void set_change_module(const ::std::string& value);
  #if LANG_CXX11
  void set_change_module(::std::string&& value);
  #endif
  void set_change_module(const char* value);
  void set_change_module(const char* value, size_t size);
  ::std::string* mutable_change_module();
  ::std::string* release_change_module();
  void set_allocated_change_module(::std::string* change_module);

  // .InfrastructureMessage.MsgType msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::InfrastructureMessage_MsgType msg_type() const;
  void set_msg_type(::InfrastructureMessage_MsgType value);

  // int32 sim_time = 3;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 3;
  ::google::protobuf::int32 sim_time() const;
  void set_sim_time(::google::protobuf::int32 value);

  // bool connection_change_successful = 5;
  void clear_connection_change_successful();
  static const int kConnectionChangeSuccessfulFieldNumber = 5;
  bool connection_change_successful() const;
  void set_connection_change_successful(bool value);

  // @@protoc_insertion_point(class_scope:InfrastructureMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr change_module_;
  int msg_type_;
  ::google::protobuf::int32 sim_time_;
  bool connection_change_successful_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrafficMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TrafficMessage) */ {
 public:
  TrafficMessage();
  virtual ~TrafficMessage();

  TrafficMessage(const TrafficMessage& from);

  inline TrafficMessage& operator=(const TrafficMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrafficMessage(TrafficMessage&& from) noexcept
    : TrafficMessage() {
    *this = ::std::move(from);
  }

  inline TrafficMessage& operator=(TrafficMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrafficMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrafficMessage* internal_default_instance() {
    return reinterpret_cast<const TrafficMessage*>(
               &_TrafficMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TrafficMessage* other);
  friend void swap(TrafficMessage& a, TrafficMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrafficMessage* New() const final {
    return CreateMaybeMessage<TrafficMessage>(NULL);
  }

  TrafficMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrafficMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrafficMessage& from);
  void MergeFrom(const TrafficMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrafficMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // string destination = 4;
  void clear_destination();
  static const int kDestinationFieldNumber = 4;
  const ::std::string& destination() const;
  void set_destination(const ::std::string& value);
  #if LANG_CXX11
  void set_destination(::std::string&& value);
  #endif
  void set_destination(const char* value);
  void set_destination(const char* value, size_t size);
  ::std::string* mutable_destination();
  ::std::string* release_destination();
  void set_allocated_destination(::std::string* destination);

  // int32 sim_time = 2;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 2;
  ::google::protobuf::int32 sim_time() const;
  void set_sim_time(::google::protobuf::int32 value);

  // int32 start = 5;
  void clear_start();
  static const int kStartFieldNumber = 5;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // int32 stop = 6;
  void clear_stop();
  static const int kStopFieldNumber = 6;
  ::google::protobuf::int32 stop() const;
  void set_stop(::google::protobuf::int32 value);

  // int32 interval = 7;
  void clear_interval();
  static const int kIntervalFieldNumber = 7;
  ::google::protobuf::int32 interval() const;
  void set_interval(::google::protobuf::int32 value);

  // int32 packet_length = 8;
  void clear_packet_length();
  static const int kPacketLengthFieldNumber = 8;
  ::google::protobuf::int32 packet_length() const;
  void set_packet_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TrafficMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr destination_;
  ::google::protobuf::int32 sim_time_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 stop_;
  ::google::protobuf::int32 interval_;
  ::google::protobuf::int32 packet_length_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttackMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AttackMessage) */ {
 public:
  AttackMessage();
  virtual ~AttackMessage();

  AttackMessage(const AttackMessage& from);

  inline AttackMessage& operator=(const AttackMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttackMessage(AttackMessage&& from) noexcept
    : AttackMessage() {
    *this = ::std::move(from);
  }

  inline AttackMessage& operator=(AttackMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttackMessage* internal_default_instance() {
    return reinterpret_cast<const AttackMessage*>(
               &_AttackMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AttackMessage* other);
  friend void swap(AttackMessage& a, AttackMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttackMessage* New() const final {
    return CreateMaybeMessage<AttackMessage>(NULL);
  }

  AttackMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AttackMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AttackMessage& from);
  void MergeFrom(const AttackMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttackMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AttackMessage_MsgType MsgType;
  static const MsgType PACKET_DROP =
    AttackMessage_MsgType_PACKET_DROP;
  static const MsgType PACKET_FALSIFICATION =
    AttackMessage_MsgType_PACKET_FALSIFICATION;
  static const MsgType PACKET_DELAY =
    AttackMessage_MsgType_PACKET_DELAY;
  static inline bool MsgType_IsValid(int value) {
    return AttackMessage_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    AttackMessage_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    AttackMessage_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    AttackMessage_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return AttackMessage_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return AttackMessage_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return AttackMessage_MsgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string attacked_module = 4;
  void clear_attacked_module();
  static const int kAttackedModuleFieldNumber = 4;
  const ::std::string& attacked_module() const;
  void set_attacked_module(const ::std::string& value);
  #if LANG_CXX11
  void set_attacked_module(::std::string&& value);
  #endif
  void set_attacked_module(const char* value);
  void set_attacked_module(const char* value, size_t size);
  ::std::string* mutable_attacked_module();
  ::std::string* release_attacked_module();
  void set_allocated_attacked_module(::std::string* attacked_module);

  // .AttackMessage.MsgType msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::AttackMessage_MsgType msg_type() const;
  void set_msg_type(::AttackMessage_MsgType value);

  // int32 sim_time = 3;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 3;
  ::google::protobuf::int32 sim_time() const;
  void set_sim_time(::google::protobuf::int32 value);

  // int32 start = 5;
  void clear_start();
  static const int kStartFieldNumber = 5;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // int32 stop = 6;
  void clear_stop();
  static const int kStopFieldNumber = 6;
  ::google::protobuf::int32 stop() const;
  void set_stop(::google::protobuf::int32 value);

  // int32 attack_probability = 7;
  void clear_attack_probability();
  static const int kAttackProbabilityFieldNumber = 7;
  ::google::protobuf::int32 attack_probability() const;
  void set_attack_probability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AttackMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr attacked_module_;
  int msg_type_;
  ::google::protobuf::int32 sim_time_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 stop_;
  ::google::protobuf::int32 attack_probability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CosimaMsgGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CosimaMsgGroup) */ {
 public:
  CosimaMsgGroup();
  virtual ~CosimaMsgGroup();

  CosimaMsgGroup(const CosimaMsgGroup& from);

  inline CosimaMsgGroup& operator=(const CosimaMsgGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CosimaMsgGroup(CosimaMsgGroup&& from) noexcept
    : CosimaMsgGroup() {
    *this = ::std::move(from);
  }

  inline CosimaMsgGroup& operator=(CosimaMsgGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CosimaMsgGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CosimaMsgGroup* internal_default_instance() {
    return reinterpret_cast<const CosimaMsgGroup*>(
               &_CosimaMsgGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CosimaMsgGroup* other);
  friend void swap(CosimaMsgGroup& a, CosimaMsgGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CosimaMsgGroup* New() const final {
    return CreateMaybeMessage<CosimaMsgGroup>(NULL);
  }

  CosimaMsgGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CosimaMsgGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CosimaMsgGroup& from);
  void MergeFrom(const CosimaMsgGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CosimaMsgGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .InitialMessage initial_messages = 1;
  int initial_messages_size() const;
  void clear_initial_messages();
  static const int kInitialMessagesFieldNumber = 1;
  ::InitialMessage* mutable_initial_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::InitialMessage >*
      mutable_initial_messages();
  const ::InitialMessage& initial_messages(int index) const;
  ::InitialMessage* add_initial_messages();
  const ::google::protobuf::RepeatedPtrField< ::InitialMessage >&
      initial_messages() const;

  // repeated .InfoMessage info_messages = 2;
  int info_messages_size() const;
  void clear_info_messages();
  static const int kInfoMessagesFieldNumber = 2;
  ::InfoMessage* mutable_info_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::InfoMessage >*
      mutable_info_messages();
  const ::InfoMessage& info_messages(int index) const;
  ::InfoMessage* add_info_messages();
  const ::google::protobuf::RepeatedPtrField< ::InfoMessage >&
      info_messages() const;

  // repeated .SynchronisationMessage synchronisation_messages = 3;
  int synchronisation_messages_size() const;
  void clear_synchronisation_messages();
  static const int kSynchronisationMessagesFieldNumber = 3;
  ::SynchronisationMessage* mutable_synchronisation_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::SynchronisationMessage >*
      mutable_synchronisation_messages();
  const ::SynchronisationMessage& synchronisation_messages(int index) const;
  ::SynchronisationMessage* add_synchronisation_messages();
  const ::google::protobuf::RepeatedPtrField< ::SynchronisationMessage >&
      synchronisation_messages() const;

  // repeated .InfrastructureMessage infrastructure_messages = 4;
  int infrastructure_messages_size() const;
  void clear_infrastructure_messages();
  static const int kInfrastructureMessagesFieldNumber = 4;
  ::InfrastructureMessage* mutable_infrastructure_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::InfrastructureMessage >*
      mutable_infrastructure_messages();
  const ::InfrastructureMessage& infrastructure_messages(int index) const;
  ::InfrastructureMessage* add_infrastructure_messages();
  const ::google::protobuf::RepeatedPtrField< ::InfrastructureMessage >&
      infrastructure_messages() const;

  // repeated .TrafficMessage traffic_messages = 5;
  int traffic_messages_size() const;
  void clear_traffic_messages();
  static const int kTrafficMessagesFieldNumber = 5;
  ::TrafficMessage* mutable_traffic_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::TrafficMessage >*
      mutable_traffic_messages();
  const ::TrafficMessage& traffic_messages(int index) const;
  ::TrafficMessage* add_traffic_messages();
  const ::google::protobuf::RepeatedPtrField< ::TrafficMessage >&
      traffic_messages() const;

  // repeated .AttackMessage attack_messages = 6;
  int attack_messages_size() const;
  void clear_attack_messages();
  static const int kAttackMessagesFieldNumber = 6;
  ::AttackMessage* mutable_attack_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::AttackMessage >*
      mutable_attack_messages();
  const ::AttackMessage& attack_messages(int index) const;
  ::AttackMessage* add_attack_messages();
  const ::google::protobuf::RepeatedPtrField< ::AttackMessage >&
      attack_messages() const;

  // int32 current_time_step = 7;
  void clear_current_time_step();
  static const int kCurrentTimeStepFieldNumber = 7;
  ::google::protobuf::int32 current_time_step() const;
  void set_current_time_step(::google::protobuf::int32 value);

  // int32 number_of_message_groups = 8;
  void clear_number_of_message_groups();
  static const int kNumberOfMessageGroupsFieldNumber = 8;
  ::google::protobuf::int32 number_of_message_groups() const;
  void set_number_of_message_groups(::google::protobuf::int32 value);

  // int32 number_of_messages = 9;
  void clear_number_of_messages();
  static const int kNumberOfMessagesFieldNumber = 9;
  ::google::protobuf::int32 number_of_messages() const;
  void set_number_of_messages(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CosimaMsgGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::InitialMessage > initial_messages_;
  ::google::protobuf::RepeatedPtrField< ::InfoMessage > info_messages_;
  ::google::protobuf::RepeatedPtrField< ::SynchronisationMessage > synchronisation_messages_;
  ::google::protobuf::RepeatedPtrField< ::InfrastructureMessage > infrastructure_messages_;
  ::google::protobuf::RepeatedPtrField< ::TrafficMessage > traffic_messages_;
  ::google::protobuf::RepeatedPtrField< ::AttackMessage > attack_messages_;
  ::google::protobuf::int32 current_time_step_;
  ::google::protobuf::int32 number_of_message_groups_;
  ::google::protobuf::int32 number_of_messages_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_cosima_5fcore_2fmessages_2fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InitialMessage

// string msg_id = 1;
inline void InitialMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitialMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:InitialMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void InitialMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InitialMessage.msg_id)
}
#if LANG_CXX11
inline void InitialMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InitialMessage.msg_id)
}
#endif
inline void InitialMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InitialMessage.msg_id)
}
inline void InitialMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InitialMessage.msg_id)
}
inline ::std::string* InitialMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:InitialMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitialMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:InitialMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitialMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:InitialMessage.msg_id)
}

// int32 max_advance = 2;
inline void InitialMessage::clear_max_advance() {
  max_advance_ = 0;
}
inline ::google::protobuf::int32 InitialMessage::max_advance() const {
  // @@protoc_insertion_point(field_get:InitialMessage.max_advance)
  return max_advance_;
}
inline void InitialMessage::set_max_advance(::google::protobuf::int32 value) {
  
  max_advance_ = value;
  // @@protoc_insertion_point(field_set:InitialMessage.max_advance)
}

// int32 until = 3;
inline void InitialMessage::clear_until() {
  until_ = 0;
}
inline ::google::protobuf::int32 InitialMessage::until() const {
  // @@protoc_insertion_point(field_get:InitialMessage.until)
  return until_;
}
inline void InitialMessage::set_until(::google::protobuf::int32 value) {
  
  until_ = value;
  // @@protoc_insertion_point(field_set:InitialMessage.until)
}

// int32 step_size = 4;
inline void InitialMessage::clear_step_size() {
  step_size_ = 0;
}
inline ::google::protobuf::int32 InitialMessage::step_size() const {
  // @@protoc_insertion_point(field_get:InitialMessage.step_size)
  return step_size_;
}
inline void InitialMessage::set_step_size(::google::protobuf::int32 value) {
  
  step_size_ = value;
  // @@protoc_insertion_point(field_set:InitialMessage.step_size)
}

// string logging_level = 5;
inline void InitialMessage::clear_logging_level() {
  logging_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InitialMessage::logging_level() const {
  // @@protoc_insertion_point(field_get:InitialMessage.logging_level)
  return logging_level_.GetNoArena();
}
inline void InitialMessage::set_logging_level(const ::std::string& value) {
  
  logging_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InitialMessage.logging_level)
}
#if LANG_CXX11
inline void InitialMessage::set_logging_level(::std::string&& value) {
  
  logging_level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InitialMessage.logging_level)
}
#endif
inline void InitialMessage::set_logging_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logging_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InitialMessage.logging_level)
}
inline void InitialMessage::set_logging_level(const char* value, size_t size) {
  
  logging_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InitialMessage.logging_level)
}
inline ::std::string* InitialMessage::mutable_logging_level() {
  
  // @@protoc_insertion_point(field_mutable:InitialMessage.logging_level)
  return logging_level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitialMessage::release_logging_level() {
  // @@protoc_insertion_point(field_release:InitialMessage.logging_level)
  
  return logging_level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitialMessage::set_allocated_logging_level(::std::string* logging_level) {
  if (logging_level != NULL) {
    
  } else {
    
  }
  logging_level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logging_level);
  // @@protoc_insertion_point(field_set_allocated:InitialMessage.logging_level)
}

// int32 max_byte_size_per_msg_group = 6;
inline void InitialMessage::clear_max_byte_size_per_msg_group() {
  max_byte_size_per_msg_group_ = 0;
}
inline ::google::protobuf::int32 InitialMessage::max_byte_size_per_msg_group() const {
  // @@protoc_insertion_point(field_get:InitialMessage.max_byte_size_per_msg_group)
  return max_byte_size_per_msg_group_;
}
inline void InitialMessage::set_max_byte_size_per_msg_group(::google::protobuf::int32 value) {
  
  max_byte_size_per_msg_group_ = value;
  // @@protoc_insertion_point(field_set:InitialMessage.max_byte_size_per_msg_group)
}

// -------------------------------------------------------------------

// InfoMessage

// string msg_id = 1;
inline void InfoMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:InfoMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void InfoMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfoMessage.msg_id)
}
#if LANG_CXX11
inline void InfoMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfoMessage.msg_id)
}
#endif
inline void InfoMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfoMessage.msg_id)
}
inline void InfoMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfoMessage.msg_id)
}
inline ::std::string* InfoMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:InfoMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:InfoMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:InfoMessage.msg_id)
}

// int32 max_advance = 2;
inline void InfoMessage::clear_max_advance() {
  max_advance_ = 0;
}
inline ::google::protobuf::int32 InfoMessage::max_advance() const {
  // @@protoc_insertion_point(field_get:InfoMessage.max_advance)
  return max_advance_;
}
inline void InfoMessage::set_max_advance(::google::protobuf::int32 value) {
  
  max_advance_ = value;
  // @@protoc_insertion_point(field_set:InfoMessage.max_advance)
}

// int32 sim_time = 3;
inline void InfoMessage::clear_sim_time() {
  sim_time_ = 0;
}
inline ::google::protobuf::int32 InfoMessage::sim_time() const {
  // @@protoc_insertion_point(field_get:InfoMessage.sim_time)
  return sim_time_;
}
inline void InfoMessage::set_sim_time(::google::protobuf::int32 value) {
  
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:InfoMessage.sim_time)
}

// string sender = 4;
inline void InfoMessage::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoMessage::sender() const {
  // @@protoc_insertion_point(field_get:InfoMessage.sender)
  return sender_.GetNoArena();
}
inline void InfoMessage::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfoMessage.sender)
}
#if LANG_CXX11
inline void InfoMessage::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfoMessage.sender)
}
#endif
inline void InfoMessage::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfoMessage.sender)
}
inline void InfoMessage::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfoMessage.sender)
}
inline ::std::string* InfoMessage::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:InfoMessage.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoMessage::release_sender() {
  // @@protoc_insertion_point(field_release:InfoMessage.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoMessage::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:InfoMessage.sender)
}

// string receiver = 5;
inline void InfoMessage::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoMessage::receiver() const {
  // @@protoc_insertion_point(field_get:InfoMessage.receiver)
  return receiver_.GetNoArena();
}
inline void InfoMessage::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfoMessage.receiver)
}
#if LANG_CXX11
inline void InfoMessage::set_receiver(::std::string&& value) {
  
  receiver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfoMessage.receiver)
}
#endif
inline void InfoMessage::set_receiver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfoMessage.receiver)
}
inline void InfoMessage::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfoMessage.receiver)
}
inline ::std::string* InfoMessage::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:InfoMessage.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoMessage::release_receiver() {
  // @@protoc_insertion_point(field_release:InfoMessage.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoMessage::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:InfoMessage.receiver)
}

// int32 size = 6;
inline void InfoMessage::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 InfoMessage::size() const {
  // @@protoc_insertion_point(field_get:InfoMessage.size)
  return size_;
}
inline void InfoMessage::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:InfoMessage.size)
}

// string content = 7;
inline void InfoMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoMessage::content() const {
  // @@protoc_insertion_point(field_get:InfoMessage.content)
  return content_.GetNoArena();
}
inline void InfoMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfoMessage.content)
}
#if LANG_CXX11
inline void InfoMessage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfoMessage.content)
}
#endif
inline void InfoMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfoMessage.content)
}
inline void InfoMessage::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfoMessage.content)
}
inline ::std::string* InfoMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:InfoMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoMessage::release_content() {
  // @@protoc_insertion_point(field_release:InfoMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:InfoMessage.content)
}

// int32 creation_time = 8;
inline void InfoMessage::clear_creation_time() {
  creation_time_ = 0;
}
inline ::google::protobuf::int32 InfoMessage::creation_time() const {
  // @@protoc_insertion_point(field_get:InfoMessage.creation_time)
  return creation_time_;
}
inline void InfoMessage::set_creation_time(::google::protobuf::int32 value) {
  
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:InfoMessage.creation_time)
}

// bool is_falsified = 9;
inline void InfoMessage::clear_is_falsified() {
  is_falsified_ = false;
}
inline bool InfoMessage::is_falsified() const {
  // @@protoc_insertion_point(field_get:InfoMessage.is_falsified)
  return is_falsified_;
}
inline void InfoMessage::set_is_falsified(bool value) {
  
  is_falsified_ = value;
  // @@protoc_insertion_point(field_set:InfoMessage.is_falsified)
}

// -------------------------------------------------------------------

// SynchronisationMessage

// .SynchronisationMessage.MsgType msg_type = 1;
inline void SynchronisationMessage::clear_msg_type() {
  msg_type_ = 0;
}
inline ::SynchronisationMessage_MsgType SynchronisationMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.msg_type)
  return static_cast< ::SynchronisationMessage_MsgType >(msg_type_);
}
inline void SynchronisationMessage::set_msg_type(::SynchronisationMessage_MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:SynchronisationMessage.msg_type)
}

// string msg_id = 2;
inline void SynchronisationMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SynchronisationMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void SynchronisationMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SynchronisationMessage.msg_id)
}
#if LANG_CXX11
inline void SynchronisationMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SynchronisationMessage.msg_id)
}
#endif
inline void SynchronisationMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SynchronisationMessage.msg_id)
}
inline void SynchronisationMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SynchronisationMessage.msg_id)
}
inline ::std::string* SynchronisationMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:SynchronisationMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SynchronisationMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:SynchronisationMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SynchronisationMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SynchronisationMessage.msg_id)
}

// int32 sim_time = 3;
inline void SynchronisationMessage::clear_sim_time() {
  sim_time_ = 0;
}
inline ::google::protobuf::int32 SynchronisationMessage::sim_time() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.sim_time)
  return sim_time_;
}
inline void SynchronisationMessage::set_sim_time(::google::protobuf::int32 value) {
  
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:SynchronisationMessage.sim_time)
}

// int32 max_advance = 4;
inline void SynchronisationMessage::clear_max_advance() {
  max_advance_ = 0;
}
inline ::google::protobuf::int32 SynchronisationMessage::max_advance() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.max_advance)
  return max_advance_;
}
inline void SynchronisationMessage::set_max_advance(::google::protobuf::int32 value) {
  
  max_advance_ = value;
  // @@protoc_insertion_point(field_set:SynchronisationMessage.max_advance)
}

// bool timeout = 5;
inline void SynchronisationMessage::clear_timeout() {
  timeout_ = false;
}
inline bool SynchronisationMessage::timeout() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.timeout)
  return timeout_;
}
inline void SynchronisationMessage::set_timeout(bool value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:SynchronisationMessage.timeout)
}

// string timeout_msg_id = 6;
inline void SynchronisationMessage::clear_timeout_msg_id() {
  timeout_msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SynchronisationMessage::timeout_msg_id() const {
  // @@protoc_insertion_point(field_get:SynchronisationMessage.timeout_msg_id)
  return timeout_msg_id_.GetNoArena();
}
inline void SynchronisationMessage::set_timeout_msg_id(const ::std::string& value) {
  
  timeout_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SynchronisationMessage.timeout_msg_id)
}
#if LANG_CXX11
inline void SynchronisationMessage::set_timeout_msg_id(::std::string&& value) {
  
  timeout_msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SynchronisationMessage.timeout_msg_id)
}
#endif
inline void SynchronisationMessage::set_timeout_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timeout_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SynchronisationMessage.timeout_msg_id)
}
inline void SynchronisationMessage::set_timeout_msg_id(const char* value, size_t size) {
  
  timeout_msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SynchronisationMessage.timeout_msg_id)
}
inline ::std::string* SynchronisationMessage::mutable_timeout_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:SynchronisationMessage.timeout_msg_id)
  return timeout_msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SynchronisationMessage::release_timeout_msg_id() {
  // @@protoc_insertion_point(field_release:SynchronisationMessage.timeout_msg_id)
  
  return timeout_msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SynchronisationMessage::set_allocated_timeout_msg_id(::std::string* timeout_msg_id) {
  if (timeout_msg_id != NULL) {
    
  } else {
    
  }
  timeout_msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeout_msg_id);
  // @@protoc_insertion_point(field_set_allocated:SynchronisationMessage.timeout_msg_id)
}

// -------------------------------------------------------------------

// InfrastructureMessage

// .InfrastructureMessage.MsgType msg_type = 1;
inline void InfrastructureMessage::clear_msg_type() {
  msg_type_ = 0;
}
inline ::InfrastructureMessage_MsgType InfrastructureMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:InfrastructureMessage.msg_type)
  return static_cast< ::InfrastructureMessage_MsgType >(msg_type_);
}
inline void InfrastructureMessage::set_msg_type(::InfrastructureMessage_MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:InfrastructureMessage.msg_type)
}

// string msg_id = 2;
inline void InfrastructureMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfrastructureMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:InfrastructureMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void InfrastructureMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfrastructureMessage.msg_id)
}
#if LANG_CXX11
inline void InfrastructureMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfrastructureMessage.msg_id)
}
#endif
inline void InfrastructureMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfrastructureMessage.msg_id)
}
inline void InfrastructureMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfrastructureMessage.msg_id)
}
inline ::std::string* InfrastructureMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:InfrastructureMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfrastructureMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:InfrastructureMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfrastructureMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:InfrastructureMessage.msg_id)
}

// int32 sim_time = 3;
inline void InfrastructureMessage::clear_sim_time() {
  sim_time_ = 0;
}
inline ::google::protobuf::int32 InfrastructureMessage::sim_time() const {
  // @@protoc_insertion_point(field_get:InfrastructureMessage.sim_time)
  return sim_time_;
}
inline void InfrastructureMessage::set_sim_time(::google::protobuf::int32 value) {
  
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:InfrastructureMessage.sim_time)
}

// string change_module = 4;
inline void InfrastructureMessage::clear_change_module() {
  change_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfrastructureMessage::change_module() const {
  // @@protoc_insertion_point(field_get:InfrastructureMessage.change_module)
  return change_module_.GetNoArena();
}
inline void InfrastructureMessage::set_change_module(const ::std::string& value) {
  
  change_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InfrastructureMessage.change_module)
}
#if LANG_CXX11
inline void InfrastructureMessage::set_change_module(::std::string&& value) {
  
  change_module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InfrastructureMessage.change_module)
}
#endif
inline void InfrastructureMessage::set_change_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  change_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InfrastructureMessage.change_module)
}
inline void InfrastructureMessage::set_change_module(const char* value, size_t size) {
  
  change_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InfrastructureMessage.change_module)
}
inline ::std::string* InfrastructureMessage::mutable_change_module() {
  
  // @@protoc_insertion_point(field_mutable:InfrastructureMessage.change_module)
  return change_module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfrastructureMessage::release_change_module() {
  // @@protoc_insertion_point(field_release:InfrastructureMessage.change_module)
  
  return change_module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfrastructureMessage::set_allocated_change_module(::std::string* change_module) {
  if (change_module != NULL) {
    
  } else {
    
  }
  change_module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), change_module);
  // @@protoc_insertion_point(field_set_allocated:InfrastructureMessage.change_module)
}

// bool connection_change_successful = 5;
inline void InfrastructureMessage::clear_connection_change_successful() {
  connection_change_successful_ = false;
}
inline bool InfrastructureMessage::connection_change_successful() const {
  // @@protoc_insertion_point(field_get:InfrastructureMessage.connection_change_successful)
  return connection_change_successful_;
}
inline void InfrastructureMessage::set_connection_change_successful(bool value) {
  
  connection_change_successful_ = value;
  // @@protoc_insertion_point(field_set:InfrastructureMessage.connection_change_successful)
}

// -------------------------------------------------------------------

// TrafficMessage

// string msg_id = 1;
inline void TrafficMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrafficMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void TrafficMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrafficMessage.msg_id)
}
#if LANG_CXX11
inline void TrafficMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrafficMessage.msg_id)
}
#endif
inline void TrafficMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrafficMessage.msg_id)
}
inline void TrafficMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrafficMessage.msg_id)
}
inline ::std::string* TrafficMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:TrafficMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrafficMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:TrafficMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrafficMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:TrafficMessage.msg_id)
}

// int32 sim_time = 2;
inline void TrafficMessage::clear_sim_time() {
  sim_time_ = 0;
}
inline ::google::protobuf::int32 TrafficMessage::sim_time() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.sim_time)
  return sim_time_;
}
inline void TrafficMessage::set_sim_time(::google::protobuf::int32 value) {
  
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:TrafficMessage.sim_time)
}

// string source = 3;
inline void TrafficMessage::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrafficMessage::source() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.source)
  return source_.GetNoArena();
}
inline void TrafficMessage::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrafficMessage.source)
}
#if LANG_CXX11
inline void TrafficMessage::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrafficMessage.source)
}
#endif
inline void TrafficMessage::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrafficMessage.source)
}
inline void TrafficMessage::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrafficMessage.source)
}
inline ::std::string* TrafficMessage::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:TrafficMessage.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrafficMessage::release_source() {
  // @@protoc_insertion_point(field_release:TrafficMessage.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrafficMessage::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:TrafficMessage.source)
}

// string destination = 4;
inline void TrafficMessage::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrafficMessage::destination() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.destination)
  return destination_.GetNoArena();
}
inline void TrafficMessage::set_destination(const ::std::string& value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrafficMessage.destination)
}
#if LANG_CXX11
inline void TrafficMessage::set_destination(::std::string&& value) {
  
  destination_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TrafficMessage.destination)
}
#endif
inline void TrafficMessage::set_destination(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrafficMessage.destination)
}
inline void TrafficMessage::set_destination(const char* value, size_t size) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrafficMessage.destination)
}
inline ::std::string* TrafficMessage::mutable_destination() {
  
  // @@protoc_insertion_point(field_mutable:TrafficMessage.destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrafficMessage::release_destination() {
  // @@protoc_insertion_point(field_release:TrafficMessage.destination)
  
  return destination_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrafficMessage::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    
  } else {
    
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:TrafficMessage.destination)
}

// int32 start = 5;
inline void TrafficMessage::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 TrafficMessage::start() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.start)
  return start_;
}
inline void TrafficMessage::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:TrafficMessage.start)
}

// int32 stop = 6;
inline void TrafficMessage::clear_stop() {
  stop_ = 0;
}
inline ::google::protobuf::int32 TrafficMessage::stop() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.stop)
  return stop_;
}
inline void TrafficMessage::set_stop(::google::protobuf::int32 value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:TrafficMessage.stop)
}

// int32 interval = 7;
inline void TrafficMessage::clear_interval() {
  interval_ = 0;
}
inline ::google::protobuf::int32 TrafficMessage::interval() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.interval)
  return interval_;
}
inline void TrafficMessage::set_interval(::google::protobuf::int32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:TrafficMessage.interval)
}

// int32 packet_length = 8;
inline void TrafficMessage::clear_packet_length() {
  packet_length_ = 0;
}
inline ::google::protobuf::int32 TrafficMessage::packet_length() const {
  // @@protoc_insertion_point(field_get:TrafficMessage.packet_length)
  return packet_length_;
}
inline void TrafficMessage::set_packet_length(::google::protobuf::int32 value) {
  
  packet_length_ = value;
  // @@protoc_insertion_point(field_set:TrafficMessage.packet_length)
}

// -------------------------------------------------------------------

// AttackMessage

// .AttackMessage.MsgType msg_type = 1;
inline void AttackMessage::clear_msg_type() {
  msg_type_ = 0;
}
inline ::AttackMessage_MsgType AttackMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:AttackMessage.msg_type)
  return static_cast< ::AttackMessage_MsgType >(msg_type_);
}
inline void AttackMessage::set_msg_type(::AttackMessage_MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:AttackMessage.msg_type)
}

// string msg_id = 2;
inline void AttackMessage::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:AttackMessage.msg_id)
  return msg_id_.GetNoArena();
}
inline void AttackMessage::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AttackMessage.msg_id)
}
#if LANG_CXX11
inline void AttackMessage::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AttackMessage.msg_id)
}
#endif
inline void AttackMessage::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AttackMessage.msg_id)
}
inline void AttackMessage::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AttackMessage.msg_id)
}
inline ::std::string* AttackMessage::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:AttackMessage.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackMessage::release_msg_id() {
  // @@protoc_insertion_point(field_release:AttackMessage.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackMessage::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:AttackMessage.msg_id)
}

// int32 sim_time = 3;
inline void AttackMessage::clear_sim_time() {
  sim_time_ = 0;
}
inline ::google::protobuf::int32 AttackMessage::sim_time() const {
  // @@protoc_insertion_point(field_get:AttackMessage.sim_time)
  return sim_time_;
}
inline void AttackMessage::set_sim_time(::google::protobuf::int32 value) {
  
  sim_time_ = value;
  // @@protoc_insertion_point(field_set:AttackMessage.sim_time)
}

// string attacked_module = 4;
inline void AttackMessage::clear_attacked_module() {
  attacked_module_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackMessage::attacked_module() const {
  // @@protoc_insertion_point(field_get:AttackMessage.attacked_module)
  return attacked_module_.GetNoArena();
}
inline void AttackMessage::set_attacked_module(const ::std::string& value) {
  
  attacked_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AttackMessage.attacked_module)
}
#if LANG_CXX11
inline void AttackMessage::set_attacked_module(::std::string&& value) {
  
  attacked_module_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AttackMessage.attacked_module)
}
#endif
inline void AttackMessage::set_attacked_module(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attacked_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AttackMessage.attacked_module)
}
inline void AttackMessage::set_attacked_module(const char* value, size_t size) {
  
  attacked_module_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AttackMessage.attacked_module)
}
inline ::std::string* AttackMessage::mutable_attacked_module() {
  
  // @@protoc_insertion_point(field_mutable:AttackMessage.attacked_module)
  return attacked_module_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackMessage::release_attacked_module() {
  // @@protoc_insertion_point(field_release:AttackMessage.attacked_module)
  
  return attacked_module_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackMessage::set_allocated_attacked_module(::std::string* attacked_module) {
  if (attacked_module != NULL) {
    
  } else {
    
  }
  attacked_module_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attacked_module);
  // @@protoc_insertion_point(field_set_allocated:AttackMessage.attacked_module)
}

// int32 start = 5;
inline void AttackMessage::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 AttackMessage::start() const {
  // @@protoc_insertion_point(field_get:AttackMessage.start)
  return start_;
}
inline void AttackMessage::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:AttackMessage.start)
}

// int32 stop = 6;
inline void AttackMessage::clear_stop() {
  stop_ = 0;
}
inline ::google::protobuf::int32 AttackMessage::stop() const {
  // @@protoc_insertion_point(field_get:AttackMessage.stop)
  return stop_;
}
inline void AttackMessage::set_stop(::google::protobuf::int32 value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:AttackMessage.stop)
}

// int32 attack_probability = 7;
inline void AttackMessage::clear_attack_probability() {
  attack_probability_ = 0;
}
inline ::google::protobuf::int32 AttackMessage::attack_probability() const {
  // @@protoc_insertion_point(field_get:AttackMessage.attack_probability)
  return attack_probability_;
}
inline void AttackMessage::set_attack_probability(::google::protobuf::int32 value) {
  
  attack_probability_ = value;
  // @@protoc_insertion_point(field_set:AttackMessage.attack_probability)
}

// -------------------------------------------------------------------

// CosimaMsgGroup

// repeated .InitialMessage initial_messages = 1;
inline int CosimaMsgGroup::initial_messages_size() const {
  return initial_messages_.size();
}
inline void CosimaMsgGroup::clear_initial_messages() {
  initial_messages_.Clear();
}
inline ::InitialMessage* CosimaMsgGroup::mutable_initial_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.initial_messages)
  return initial_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::InitialMessage >*
CosimaMsgGroup::mutable_initial_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.initial_messages)
  return &initial_messages_;
}
inline const ::InitialMessage& CosimaMsgGroup::initial_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.initial_messages)
  return initial_messages_.Get(index);
}
inline ::InitialMessage* CosimaMsgGroup::add_initial_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.initial_messages)
  return initial_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InitialMessage >&
CosimaMsgGroup::initial_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.initial_messages)
  return initial_messages_;
}

// repeated .InfoMessage info_messages = 2;
inline int CosimaMsgGroup::info_messages_size() const {
  return info_messages_.size();
}
inline void CosimaMsgGroup::clear_info_messages() {
  info_messages_.Clear();
}
inline ::InfoMessage* CosimaMsgGroup::mutable_info_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.info_messages)
  return info_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::InfoMessage >*
CosimaMsgGroup::mutable_info_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.info_messages)
  return &info_messages_;
}
inline const ::InfoMessage& CosimaMsgGroup::info_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.info_messages)
  return info_messages_.Get(index);
}
inline ::InfoMessage* CosimaMsgGroup::add_info_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.info_messages)
  return info_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InfoMessage >&
CosimaMsgGroup::info_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.info_messages)
  return info_messages_;
}

// repeated .SynchronisationMessage synchronisation_messages = 3;
inline int CosimaMsgGroup::synchronisation_messages_size() const {
  return synchronisation_messages_.size();
}
inline void CosimaMsgGroup::clear_synchronisation_messages() {
  synchronisation_messages_.Clear();
}
inline ::SynchronisationMessage* CosimaMsgGroup::mutable_synchronisation_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.synchronisation_messages)
  return synchronisation_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::SynchronisationMessage >*
CosimaMsgGroup::mutable_synchronisation_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.synchronisation_messages)
  return &synchronisation_messages_;
}
inline const ::SynchronisationMessage& CosimaMsgGroup::synchronisation_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.synchronisation_messages)
  return synchronisation_messages_.Get(index);
}
inline ::SynchronisationMessage* CosimaMsgGroup::add_synchronisation_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.synchronisation_messages)
  return synchronisation_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SynchronisationMessage >&
CosimaMsgGroup::synchronisation_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.synchronisation_messages)
  return synchronisation_messages_;
}

// repeated .InfrastructureMessage infrastructure_messages = 4;
inline int CosimaMsgGroup::infrastructure_messages_size() const {
  return infrastructure_messages_.size();
}
inline void CosimaMsgGroup::clear_infrastructure_messages() {
  infrastructure_messages_.Clear();
}
inline ::InfrastructureMessage* CosimaMsgGroup::mutable_infrastructure_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.infrastructure_messages)
  return infrastructure_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::InfrastructureMessage >*
CosimaMsgGroup::mutable_infrastructure_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.infrastructure_messages)
  return &infrastructure_messages_;
}
inline const ::InfrastructureMessage& CosimaMsgGroup::infrastructure_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.infrastructure_messages)
  return infrastructure_messages_.Get(index);
}
inline ::InfrastructureMessage* CosimaMsgGroup::add_infrastructure_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.infrastructure_messages)
  return infrastructure_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::InfrastructureMessage >&
CosimaMsgGroup::infrastructure_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.infrastructure_messages)
  return infrastructure_messages_;
}

// repeated .TrafficMessage traffic_messages = 5;
inline int CosimaMsgGroup::traffic_messages_size() const {
  return traffic_messages_.size();
}
inline void CosimaMsgGroup::clear_traffic_messages() {
  traffic_messages_.Clear();
}
inline ::TrafficMessage* CosimaMsgGroup::mutable_traffic_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.traffic_messages)
  return traffic_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TrafficMessage >*
CosimaMsgGroup::mutable_traffic_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.traffic_messages)
  return &traffic_messages_;
}
inline const ::TrafficMessage& CosimaMsgGroup::traffic_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.traffic_messages)
  return traffic_messages_.Get(index);
}
inline ::TrafficMessage* CosimaMsgGroup::add_traffic_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.traffic_messages)
  return traffic_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrafficMessage >&
CosimaMsgGroup::traffic_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.traffic_messages)
  return traffic_messages_;
}

// repeated .AttackMessage attack_messages = 6;
inline int CosimaMsgGroup::attack_messages_size() const {
  return attack_messages_.size();
}
inline void CosimaMsgGroup::clear_attack_messages() {
  attack_messages_.Clear();
}
inline ::AttackMessage* CosimaMsgGroup::mutable_attack_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CosimaMsgGroup.attack_messages)
  return attack_messages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AttackMessage >*
CosimaMsgGroup::mutable_attack_messages() {
  // @@protoc_insertion_point(field_mutable_list:CosimaMsgGroup.attack_messages)
  return &attack_messages_;
}
inline const ::AttackMessage& CosimaMsgGroup::attack_messages(int index) const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.attack_messages)
  return attack_messages_.Get(index);
}
inline ::AttackMessage* CosimaMsgGroup::add_attack_messages() {
  // @@protoc_insertion_point(field_add:CosimaMsgGroup.attack_messages)
  return attack_messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AttackMessage >&
CosimaMsgGroup::attack_messages() const {
  // @@protoc_insertion_point(field_list:CosimaMsgGroup.attack_messages)
  return attack_messages_;
}

// int32 current_time_step = 7;
inline void CosimaMsgGroup::clear_current_time_step() {
  current_time_step_ = 0;
}
inline ::google::protobuf::int32 CosimaMsgGroup::current_time_step() const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.current_time_step)
  return current_time_step_;
}
inline void CosimaMsgGroup::set_current_time_step(::google::protobuf::int32 value) {
  
  current_time_step_ = value;
  // @@protoc_insertion_point(field_set:CosimaMsgGroup.current_time_step)
}

// int32 number_of_message_groups = 8;
inline void CosimaMsgGroup::clear_number_of_message_groups() {
  number_of_message_groups_ = 0;
}
inline ::google::protobuf::int32 CosimaMsgGroup::number_of_message_groups() const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.number_of_message_groups)
  return number_of_message_groups_;
}
inline void CosimaMsgGroup::set_number_of_message_groups(::google::protobuf::int32 value) {
  
  number_of_message_groups_ = value;
  // @@protoc_insertion_point(field_set:CosimaMsgGroup.number_of_message_groups)
}

// int32 number_of_messages = 9;
inline void CosimaMsgGroup::clear_number_of_messages() {
  number_of_messages_ = 0;
}
inline ::google::protobuf::int32 CosimaMsgGroup::number_of_messages() const {
  // @@protoc_insertion_point(field_get:CosimaMsgGroup.number_of_messages)
  return number_of_messages_;
}
inline void CosimaMsgGroup::set_number_of_messages(::google::protobuf::int32 value) {
  
  number_of_messages_ = value;
  // @@protoc_insertion_point(field_set:CosimaMsgGroup.number_of_messages)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SynchronisationMessage_MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SynchronisationMessage_MsgType>() {
  return ::SynchronisationMessage_MsgType_descriptor();
}
template <> struct is_proto_enum< ::InfrastructureMessage_MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::InfrastructureMessage_MsgType>() {
  return ::InfrastructureMessage_MsgType_descriptor();
}
template <> struct is_proto_enum< ::AttackMessage_MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AttackMessage_MsgType>() {
  return ::AttackMessage_MsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_cosima_5fcore_2fmessages_2fmessage_2eproto
