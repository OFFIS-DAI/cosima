//
// Generated file, do not edit! Created by opp_msgtool 6.0 from messages/CosimaApplicationChunk.msg.
//

#ifndef __COSIMAAPPLICATIONCHUNK_M_H
#define __COSIMAAPPLICATIONCHUNK_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class CosimaApplicationChunk;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

// cplusplus {{
    const inet::B CHUNK_LENGTH; 
// }}

/**
 * Class generated from <tt>messages/CosimaApplicationChunk.msg:23</tt> by opp_msgtool.
 * <pre>
 * class CosimaApplicationChunk extends inet::FieldsChunk
 * {
 *     chunkLength = CHUNK_LENGTH;
 *     simtime_t creationTimeOmnetpp;
 *     string content;
 *     string receiver;
 *     string sender;
 *     string msgId;
 *     int creationTimeCoupling;
 *     bool isTrafficMessage;
 *     bool isFalsified;
 * }
 * </pre>
 */
class CosimaApplicationChunk : public ::inet::FieldsChunk
{
  protected:
    omnetpp::simtime_t creationTimeOmnetpp = SIMTIME_ZERO;
    omnetpp::opp_string content;
    omnetpp::opp_string receiver;
    omnetpp::opp_string sender;
    omnetpp::opp_string msgId;
    int creationTimeCoupling = 0;
    bool isTrafficMessage_ = false;
    bool isFalsified_ = false;

  private:
    void copy(const CosimaApplicationChunk& other);

  protected:
    bool operator==(const CosimaApplicationChunk&) = delete;

  public:
    CosimaApplicationChunk();
    CosimaApplicationChunk(const CosimaApplicationChunk& other);
    virtual ~CosimaApplicationChunk();
    CosimaApplicationChunk& operator=(const CosimaApplicationChunk& other);
    virtual CosimaApplicationChunk *dup() const override {return new CosimaApplicationChunk(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual omnetpp::simtime_t getCreationTimeOmnetpp() const;
    virtual void setCreationTimeOmnetpp(omnetpp::simtime_t creationTimeOmnetpp);

    virtual const char * getContent() const;
    virtual void setContent(const char * content);

    virtual const char * getReceiver() const;
    virtual void setReceiver(const char * receiver);

    virtual const char * getSender() const;
    virtual void setSender(const char * sender);

    virtual const char * getMsgId() const;
    virtual void setMsgId(const char * msgId);

    virtual int getCreationTimeCoupling() const;
    virtual void setCreationTimeCoupling(int creationTimeCoupling);

    virtual bool isTrafficMessage() const;
    virtual void setIsTrafficMessage(bool isTrafficMessage);

    virtual bool isFalsified() const;
    virtual void setIsFalsified(bool isFalsified);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CosimaApplicationChunk& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CosimaApplicationChunk& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline CosimaApplicationChunk *fromAnyPtr(any_ptr ptr) { return check_and_cast<CosimaApplicationChunk*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __COSIMAAPPLICATIONCHUNK_M_H

