image: registry-gitlab.offis.de/official/fbe-p_cosima/mosaik-integration:cpp14

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/
    - inet4
    - simulte
stages:
  - prepare
  - test
  - update
  - deploy

build-inet:
  stage: prepare
  script:
    - |-
      if [ ! -d inet4/ ]; then
        echo "Download and build inet $DOWNLOAD_AND_BUILD_INET"
        wget https://github.com/inet-framework/inet/releases/download/v4.2.2/inet-4.2.2-src.tgz
        tar -xzf inet-4.2.2-src.tgz
        rm inet-4.2.2-src.tgz
        dir
        cd inet4
        make makefiles
        make -j$(grep -c proc /proc/cpuinfo)
        make MODE=release -j$(grep -c proc /proc/cpuinfo)
        cd ..
        dir
      fi

    - |-
      if [ ! -d simulte/ ]; then
        echo "Download and build SimuLTE"
        wget https://github.com/inet-framework/simulte/releases/download/v1.2.0/simulte-1.2.0-src.tgz
        tar -xzf simulte-1.2.0-src.tgz
        rm simulte-1.2.0-src.tgz
        dir
        cd simulte
        make makefiles
        make -j$(grep -c proc /proc/cpuinfo)
        make MODE=release -j$(grep -c proc /proc/cpuinfo)
        cd ..
        dir
      fi

  artifacts:
    paths:
      - inet4
      - simulte
    expire_in: 1 day
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - when: manual

prepare_simulation_environment:
  stage: prepare
  script:
    - cd cosima_omnetpp_project
    - rm -r tests
    - dir
    - make -f makemakefiles
    - make
    - cd ..
    - dir
    - python --version  # For debugging
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install -r requirements.txt --no-dependencies
    - pip3 freeze
  artifacts:
    paths:
      - venv
      - cosima_omnetpp_project
    expire_in: 1 day
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

run-communication-scenario-integration-tests:
  stage: test
  script:
    - sudo apt-get update
    - sudo apt-get install -y psmisc
    - sudo apt-get install procps
    - pytest -s tests/integration_tests/test_communication_scenario.py
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

run-smaces-scenario-integration-tests:
  stage: test
  script:
    - sudo apt-get update
    - sudo apt-get install -y psmisc
    - sudo apt-get install procps
    - pip3 uninstall mango-agents
    - pip3 uninstall mango-library
    - pip3 install git+https://gitlab.com/mango-agents/mango.git@development
    - pip3 install git+https://gitlab.com/mango-agents/mango-library.git@import_modifications_for_smaces
    - pip3 install json_tricks
    - pytest -s tests/integration_tests/test_mango_scenario.py
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

run-negotiation-scenario-integration-tests:
  stage: test
  script:
    - sudo apt-get update
    - sudo apt-get install -y psmisc
    - sudo apt-get install procps
    - pytest -s tests/integration_tests/test_negotiation_scenario.py
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

push-to-official-gitlab:
  stage: deploy
  script:
    - dir
    - cd ..

    # delete folder if it exists
    - |- 
      if [ -d "official_gitlab/" ]; then 
       rm -r official_gitlab
      fi

    # Clone the repository via HTTPS inside a new directory
    - git clone "https://${OFFICIAL_GITLAB_USER_NAME}:${GITLAB_TOKEN_NEW}@gitlab.com//mosaik/examples/cosima.git" "official_gitlab"

    # go into folder 
    - cd official_gitlab

    # remove contents from folder
    - rm -r *

    # move everything from mosaik-integration to official_gitlab
    - mv ../mosaik-integration/* .

    # remove gitlab.yml files
    - dir
    - rm .gitlab-ci.yml

    # Add all generated files to Git
    - git add --all

    # Show the status of files that are about to be created, updated or deleted
    - git status

    - git config --global user.email "${OFFICIAL_GITLAB_USER_EMAIL}"
    - git config --global user.name "${OFFICIAL_GITLAB_USER_NAME}"

    # show current branch
    - git branch

    # Commit all changes
    - git commit -m "update from internal repository"

    # Update the repository and make sure to skip the pipeline create for this commit
    - git push -u origin master
  only:
    refs:
      - master


